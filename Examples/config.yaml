openGlLogging: true

processingPipeline:
  - frameBuffer: default
    scene: postProcessing
  - frameBuffer: offScreen
    scene: main
  - frameBuffer: shadowMap
    scene: main
    enforcedShader: shadowMap

shaders:
  phong:
    type: phong
    vertexShaders:
      - ../Core/Shader/PhongShader/phong.vert
    fragmentShaders:
      - ../Core/Shader/PhongShader/phong.frag
      - ../Core/Shader/PhongShader/material.frag
      - ../Core/Shader/PhongShader/lights.frag
      - ../Core/Shadow/shadow.frag
    uniformBuffers:
      - camera
      - directionalLight
      - pointLight
      - spotLight
    frameBuffers:
      - shadowMap
  postProcessing:
    type: postProcessing
    vertexShaders:
      - ../Core/PostProcessing/postProcessing.vert
    fragmentShaders:
      - ../Core/PostProcessing/none.frag
    frameBuffers:
      - offScreen
  skybox:
    type: skybox
    vertexShaders:
      - ../Core/Skybox/skybox.vert
    fragmentShaders:
      - ../Core/Skybox/skybox.frag
    uniformBuffers:
      - camera
  shadowMap:
    type: shadowMapShader
    vertexShaders:
      - ../Core/Shadow/shadowMap.vert
    fragmentShaders:
      - ../Core/Shadow/shadowMap.frag
    uniformBuffers:
      - directionalLight

frameBuffers:
  default:
    type: sdlWindow
    config:
      title: YamlConfig Example
      type: window
      sync: adaptive
      width: 1920
      height: 1080
      depthTest: true
      culling: true
      blend: true
  offScreen:
    type: offScreen
    config:
      width: 1920
      height: 1080
      depthTest: true
      culling: true
      blend: true
  shadowMap:
    type: shadowMapBuffer
    config:
      width: 4096
      height: 4096
      depthTest: true
      culling: front
      blend: false

uniformBuffers:
  camera:
    type: camera
    config:
      index: 0
  directionalLight:
    type: directionalLight
    config:
      index: 1
  pointLight:
    type: pointLight
    config:
      index: 2
  spotLight:
    type: spotLight
    config:
      index: 3

scenes:
  postProcessing:
    type: postProcessing
    config:
      kernel: [
        1, 2, 1,
        2, 4, 2,
        1, 2, 2
      ]
      kernelOffset:
        numerator: 1
        denominator: 300
      kernelMultiplier:
        numerator: 1
        denominator: 16
      shaderName: postProcessing
  main:
    type: sceneGraph
    config:
      root:
        type: Scene.Node
        children:
          cameraControl:
            type: UI.Control.WASDControl
            config:
              keyboardSensitivity: 1
              mouseSensitivity: 0.5
            transformation:
              - translation: [0, 0, 5]
            children:
              camera:
                type: Node.Camera
                config:
                  projection:
                    perspective:
                      fovy: 90
                      aspect: 0.5625
                      near: 0.1
                      far: 100
                  uniformBuffer: camera
                transformation:
                  - rotation:
                      angle: 180
                      axis: [0, 1, 0]
              flash_light:
                type: Node.LightNode.SpotLightNode
                config:
                  spotLight:
                    innerCone: 0.80
                    outerCone: 0.95
                    ambient: [0, 0.1, 0]
                    diffuse: [0, 1, 0]
                    specular: [0, 1, 0]
                    linear: 0.027
                    quadratic: 0.0028
                    direction: [0, 0, 1]
                  uniformBuffer: spotLight
          sun:
            type: SceneGraph.Rotor
            config:
              speed: 0.05
            children:
              sunLight:
                type: Node.LightNode.DirectionalLightNode
                config:
                  directionalLight:
                    direction: [-1, -1, -1]
                    ambient: [0.32, 0.32, 0.32]
                    diffuse: [0.8, 0.8, 0.8]
                    specular: [0.8, 0.8, 0.8]
                  uniformBuffer: directionalLight
                  shadowMap:
                    projection:
                      orthogonal:
                        left: -30
                        right: 30
                        bottom: -30
                        top: 30
                        near: -25
                        far: 25
          arena:
            type: Node.ModelNode
            config:
              file: Models/arena.obj
              shader: phong
          fern:
            type: Node.ModelNode
            config:
              file: Models/fern/fern.fbx
              shader: phong
            transformation:
              - scale: 0.01
          construction_light:
            type: Node.ModelNode
            config:
              file: Models/construction_light/Construction_Light.fbx
              textures:
                diffuse:
                  - Models/construction_light/DiffuseMap.png
                normals:
                  - Models/construction_light/Normal.png
                specular:
                  - Models/construction_light/Specular.png
                emissive:
                  - Models/construction_light/Glow.png
              shader: phong
            transformation:
              - translation: [5, 0, -5]
              - scale: 0.01
          lightRotator:
            type: SceneGraph.Rotor
            config:
              speed: 1
            children:
              blueLight:
                type: Node.LightNode.PointLightNode
                config:
                  pointLight:
                    ambient: [0.0, 0.0, 0.2]
                    diffuse: [0.0, 0.0, 1.0]
                    specular: [0.0, 0.0, 1.0]
                    linear: 0.027
                    quadratic: 0.0028
                  uniformBuffer: pointLight
                transformation:
                  - translation: [0, 1, -3]
              redLight:
                type: Node.LightNode.PointLightNode
                config:
                  pointLight:
                    ambient: [0.2, 0.0, 0.0]
                    diffuse: [1.0, 0.0, 0.0]
                    specular: [1.0, 0.0, 0.0]
                    linear: 0.027
                    quadratic: 0.0028
                  uniformBuffer: pointLight
                transformation:
                  - translation: [0, 1, 3]
          window1:
            type: Node.ModelNode
            config: &windowConfig
              file: Models/plain.fbx
              textures:
                diffuse:
                  - Models/blending_transparent_window.png
              isTransparent: true
              shader: phong
            transformation:
              - translation: [0, 0, 5]
              - scale: 0.01
          window2:
            type: Node.ModelNode
            config: *windowConfig
            transformation:
              - translation: [0, 0, 3]
              - scale: 0.01
          skybox:
            type: Node.Skybox
            config:
              shader: skybox
              textures:
                back: Models/skybox/snowalps_lf.png
                front: Models/skybox/snowalps_rt.png
                top: Models/skybox/snowalps_up.png
                bottom: Models/skybox/snowalps_dn.png
                left: Models/skybox/snowalps_bk.png
                right: Models/skybox/snowalps_ft.png
